# Источник: https://inf-ege.sdamgia.ru/test?id=14289935&nt=True&pub=False

# Задача:
# Системный администратор раз в неделю создаёт архив пользовательских файлов. Однако объём диска куда он помещает архив
# может быть меньше чем суммарный объём архивируемых файлов. Известно какой объём занимает файл каждого пользователя. По
# заданной информации об объёме файлов пользователей и свободном объёме на архивном диске определите максимальное число
# пользователей чьи файлы можно сохранить в архиве а также максимальный размер имеющегося файла который может быть
# сохранён в архиве при условии что сохранены файлы максимально возможного числа пользователей. Входные данные. Задание
# 26 В первой строке входного файла находятся два числа S размер свободного места на диске натуральное число не
# превышающее 10 000 и N количество пользователей натуральное число не превышающее 3000. В следующих N строках находятся
# значения объёмов файлов каждого пользователя все числа натуральные не превышающие 100 каждое в отдельной строке.
# Запишите в ответе два числа сначала наибольшее число пользователей чьи файлы могут быть помещены в архив затем
# максимальный размер имеющегося файла который может быть сохранён в архиве при условии что сохранены файлы максимально
# возможного числа пользователей. Пример входного файла 100 4 80 30 50 40 При таких исходных данных можно сохранить
# файлы максимум двух пользователей. Возможные объёмы этих двух файлов 30 и 40 30 и 50 или 40 и 50. Наибольший объём
# файла из перечисленных пар 50 поэтому ответ для приведённого примера 2 50 Ответ

# Файлы:
lines = open(r"../files/Задача номер 26/Задание 26.txt").readlines()

disk = int(lines[0].split()[0])
files = sorted(map(int, lines[1:]))

max_count = 0
taken = 0
for file in files:
    taken += file
    if taken > disk: break
    max_count += 1

max_index = -1
queue = [files[max_index]]
while len(queue) < max_count:
    queue.append(files.pop(0))
    while sum(queue) > disk:  # Тут был if!!!
        max_index -= 1
        queue[0] = files[max_index]

print(max_count, queue[0])
